-- Create a database
CREATE DATABASE IF NOT EXISTS online_restaurant;
USE online_restaurant;


-- Roles table
CREATE TABLE IF NOT EXISTS roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(100) NOT NULL
);

INSERT INTO roles (role_name)
VALUES 
    ('Admin'),
    ('Customer'),
    ('Staff');

-- Users table
CREATE TABLE IF NOT EXISTS users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    login_ VARCHAR(50) NOT NULL,
    password_ VARCHAR(255) NOT NULL
);

INSERT INTO users (login_, password_)
VALUES 
    ('login1', 'psw1'),
    ('login2', 'psw2'),
    ('login3', 'psw3'),
    ('login4', 'psw4'),
    ('login5', 'psw5');

-- Customers table
    CREATE TABLE IF NOT EXISTS customers (
    customer_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20),
    address VARCHAR(255) NOT NULL,
    user_id INT,
    role_id INT DEFAULT 2,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);


INSERT INTO customers (first_name, last_name, email, phone_number, address, user_id, role_id)
VALUES 
    ('John', 'Doe', 'john.doe@email.com', '123-456-7890', '123 Main St', 1, 2),
    ('Jane', 'Smith', 'jane.smith@email.com', '987-654-3210', '456 Oak Ave', 2, 2),
    ('Bob', 'Johnson', 'bob.johnson@email.com', '555-123-4567', '789 Pine Blvd', 3, 2),
    ('Alice', 'Williams', 'alice.williams@email.com', '111-222-3333', '101 Elm St', 4, 2),
    ('Charlie', 'Brown', 'charlie.brown@email.com', '444-555-6666', '202 Maple Ln', 5, 2);

CREATE TABLE IF NOT EXISTS creditCards (
    card_id INT AUTO_INCREMENT PRIMARY KEY,
    cardholder_name VARCHAR(100) NOT NULL,
    cardholder_number VARCHAR(100) NOT NULL,
    expiry_date VARCHAR(20),
    cvv VARCHAR(255) NOT NULL, 
    balance DECIMAL(10, 2) NOT NULL,
    customer_id INT,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


INSERT INTO creditcards (cardholder_name, cardholder_number, expiry_date, cvv, balance, customer_id)
VALUES 
    ('John Doe', 4032111122223333, '07/24', 678, 100.00, 1),
    ('Jane Smith', 4234432112344321, '10/25', 987, 350.69, 2),
    ('Bob Johnson', 4532123456781234, '11/25', 457, 400.11, 3),
    ('Alice Williams', 4444111122223333, '12/26', 121, 1000.00, 4),
    ('Charlie Brown', 4040202010103030, '07/25', 890, 845.58, 5);

-- SuperUsers table
CREATE TABLE IF NOT EXISTS SuperUsers (
    superuser_id INT AUTO_INCREMENT PRIMARY KEY,
    login_ VARCHAR(50) NOT NULL,
    password_ VARCHAR(255) NOT NULL
);

INSERT INTO SuperUsers (login_, password_)
VALUES 
    ('admin', 'superadmin'),
    ('charlie_7', 'psw7');

-- Staff table
CREATE TABLE IF NOT EXISTS staff (
    staff_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_number VARCHAR(20),
    address VARCHAR(255) NOT NULL,
    position VARCHAR(100) NOT NULL,
    user_id INT,
    role_id INT DEFAULT 2,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);


INSERT INTO staff (first_name, last_name, email, phone_number, address, position, user_id, role_id)
VALUES 
    ('Charlie', 'Williams', 'manager.one@email.com', '999-888-7777', '789 Oak St', 'Manager', 2, 3),
    ('Bob', 'Smith', 'admin.two@email.com', '666-777-8888', '321 Pine Ave', 'IT specialist', 1, 1);


-- Menu items table
CREATE TABLE IF NOT EXISTS menu_items (
    item_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    img_pc VARCHAR(255)
);


INSERT INTO menu_items (name, category, price, img_pc)
VALUES 
    ('Tomato Meat Lovers', 'Pizza', 15.99, 'product1.png'),
    ('Carbonara', 'Pizza', 14.99, 'product2.png'),
    ('4 Seasons', 'Pizza', 15.99, 'product3.png'),
    ('Margaritta Classic', 'Pizza', 14.99, 'product4.png'),
    ('Classic Meat Burger', 'Burger', 10.99, 'product5.png'),
    ('Double Meat Burger', 'Burger', 12.99, 'product6.png'),
    ('Fried Chicken Burger', 'Burger', 9.99, 'product7.png'),
    ('Grill Chicken Burger', 'Burger', 10.99, 'product8.png'),
    ('Roasted Potato Wedged', 'Starter', 4.99, 'product9.png'),
    ('Fried Potato Wedged', 'Starter', 4.99, 'product10.png'),
    ('Onion Rings', 'Starter', 4.99, 'product11.png'),
    ('Chicken Nuggets', 'Starter', 6.99, 'product12.png'),
    ('Cola 0,5', 'Beverages', 2.99, 'product13.png'),
    ('Fanta 0,5', 'Beverages', 2.99, 'product14.png'),
    ('Sprite 0,5', 'Beverages', 2.99, 'product15.png');


  -- Coupon table
CREATE TABLE IF NOT EXISTS coupons (
    coupon_id INT AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(10) NOT NULL,
    issue_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expire_date TIMESTAMP,
    percent INT NOT NULL
);


INSERT INTO coupons (code, issue_date, expire_date, percent)
VALUES 
    ('SALE10', '2023-01-01', '2023-01-31', 10),
    ('FREESHIP', '2023-02-15', '2023-02-28', 5),
    ('25OFF', '2023-03-10', '2023-03-20', 5),
    ('WEEKEND50', '2023-04-01', '2023-04-02', 50),
    ('FIRSTORDER', '2023-05-05', '2023-06-05', 5);
  
-- Orders table
CREATE TABLE IF NOT EXISTS orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount DECIMAL(10, 2) NOT NULL,
    status VARCHAR(50) NOT NULL,
    coupon_id INT DEFAULT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (coupon_id) REFERENCES coupons(coupon_id)
);


INSERT INTO orders (user_id, total_amount, status, coupon_id)
VALUES 
    (1, 28.98, 'Finished', NULL),
    (2, 36.98, 'Preparing', NULL),
    (3, 18.99, 'Delivering', NULL),
    (4, 25.99, 'Declined', NULL),
    (5, 15.99, 'Finished', NULL);


-- Order details
CREATE TABLE IF NOT EXISTS order_details (
    order_detail_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    item_id INT,
    quantity INT NOT NULL,
    subtotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)
);


INSERT INTO order_details (order_id, item_id, quantity, subtotal)
VALUES 
    (1, 1, 1, 12.99),
    (1, 2, 1, 14.99),
    (2, 3, 1, 15.99),
    (2, 4, 1, 8.99),
    (2, 5, 1, 9.99);


-- Payments table
CREATE TABLE IF NOT EXISTS payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    amount DECIMAL(10, 2) NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

INSERT INTO payments (order_id, amount, payment_method)
VALUES 
    (1, 27.98, 2),
    (2, 34.94, 1);




SELECT 
    mi.name AS item_name,
    mi.price AS item_price,
    SUM(od.quantity) AS total_quantity_sold
FROM 
    order_details od
JOIN 
    menu_items mi ON od.item_id = mi.item_id
GROUP BY 
    od.item_id
ORDER BY 
    total_quantity_sold DESC
LIMIT 3;


SELECT 
    o.order_id,
    u.login_ AS user_login,
    o.order_date
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    u.login_ = 'login1'
ORDER BY 
    o.order_date DESC
LIMIT 1;


SELECT
    o.order_id,
    c.first_name AS customer_name,
    c.last_name AS customer_last_name,
    c.email AS customer_email,
    c.phone_number AS customer_phone_number,
    o.order_date,
    o.total_amount,
    o.status,
    GROUP_CONCAT(mi.name) AS menu_items_names,
    GROUP_CONCAT(od.quantity) AS quantities
FROM
    orders o
JOIN
    customers c ON o.user_id = c.user_id
JOIN
    order_details od ON o.order_id = od.order_id
JOIN
    menu_items mi ON od.item_id = mi.item_id
GROUP BY
    o.order_id,
    c.first_name,
    c.last_name,
    c.email,
    c.phone_number,
    o.order_date,
    o.total_amount,
    o.status;









